name: Storyblok published

on:
  # Allows workflow to be manually run in Github UI
  workflow_dispatch:
  # Allows workflow to be called via HTTP calls to GitHub (with correct auth, etc)
  repository_dispatch:
    types: [storyblok-published]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-or-update-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download stories from Storyblok and add changes to git
        env:
          STORYBLOK_TOKEN: ${{ secrets.STORYBLOK_TOKEN }}
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        run: |
          # Grab all stories from Storyblok, and extract their full slugs from the JSON
          # NOTE: If we ever have more than 100 stories, we'll have to paginate through the results
          # (storyblok max page size is 100)
          curl "https://api.storyblok.com/v2/cdn/stories?per_page=100&token=$STORYBLOK_TOKEN" \
            -L -X GET -H "Accept: application/json" -H "Content-Type: application/json" \
            | jq ".stories | .[] | .full_slug" \
            | while read story_slug;
            do
              sleep 1  # Avoid Storyblok rate-limits...

              # $story_slug will be wrapped in quotes - remove them
              story=$(echo $story_slug | sed -e 's/^"//' -e 's/"$//')

              # Grab the data for just this story and store it
              curl "https://api.storyblok.com/v2/cdn/stories/$story?token=$STORYBLOK_TOKEN" \
                -L -X GET \
                -H "Accept: application/json" \
                -H "Content-Type: application/json" \
                | jq > storyblok/data/$story.json
              
              # Add the updates to git
              git add storyblok/data/$story.json
            done
      - name: Commit Changes and Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          # Note: Need to use a Personal Access Token here, NOT the standard
          # secrets.GITHUB_TOKEN - if we use the standard Github Actions GITHUB_TOKEN
          # then the commit/push/etc won't trigger subsequent Github Actions (such as
          # the lint-pr action, which is required to merge PRs). The Personal Access
          # Token must be setup as an Action Secret on the GitHub repo. Use the same
          # Personal Access Token as the GHA_TOKEN env variable in your deployed app.
          token: $GH_PERSONAL_ACCESS_TOKEN
          base: main
          branch: auto/storyblok-published-changes
          commit-message: Latest changes from Storyblok
          committer: GitHub Action Bot - Storybook Published <noreply@github.com>
          author: GitHub Action Bot - Storybook Published <noreply@github.com>
          title: "[Storyblok] Latest published changes"
          body: |
            Automatically created by Storyblok-Published Github action
          labels: |
            automated-pr
            storyblok-pr
